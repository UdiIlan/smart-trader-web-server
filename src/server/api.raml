#%RAML 1.0
title: smart trader rest api between front end and back end
####################### getUserData ################################ 
/getUserData: 
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          }  
        }

      # 200: # HTTP status code
      #   body: # declare content of response
      #     application/json: # media type
      #       type: | # structural definition of a response (schema or type)
      #         {
      #           "title": "Hello world Response",
      #           "type": "object",
      #           "properties": {
      #             "message": {
      #               "type": "string"
      #             }
      #           }
      #         }
      #       example: | # example of how a response looks
      #         {
      #           "message": "Hello world"
      #         }

####################### login ################################       
/login: 
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          key : {
            type: string,
            required: true 
          },
          secret : {
            type: string,
            required: true 
          },
          clientId : {
            type: string,
            required: false 
          }   
        }

/buyImmediateOrCancel: 
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          amount : {
            type: string,
            required: true 
          },
          price : {
            type: string,
            required: true 
          },
          currencyPair : {
            type: string,
            required: false 
          }   
        }

/sellImmediateOrCancel: 
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          amount : {
            type: string,
            required: true 
          },
          price : {
            type: string,
            required: true 
          },
          currencyPair : {
            type: string,
            required: false 
          }   
        }

/timeBuyTaking: 
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          amount : {
            type: string,
            required: true 
          },
          price : {
            type: string,
            required: true 
          },
          currencyPair : {
            type: string,
            required: false 
          },
          duration : {
            type: string,
            required: true 
          },
          maxOrderSize : {
            type: string,
            required: true 
          }          
        }

/timedBuyMaking:
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          amount : {
            type: string,
            required: true 
          },
          price : {
            type: string,
            required: true 
          },
          currencyPair : {
            type: string,
            required: false 
          },
          duration : {
            type: string,
            required: true 
          },
          maxOrderSize : {
            type: string,
            required: true 
          }          

        }

/timedSellMaking:
  post:
    description: 
    body:
      application/json:
        type: object
        required: true
        properties: {
          exchange : {
            type: string,
            required: true 
          },
          amount : {
            type: string,
            required: true 
          },
          price : {
            type: string,
            required: true 
          },
          currencyPair : {
            type: string,
            required: false 
          },
          duration : {
            type: string,
            required: true 
          },
          maxOrderSize : {
            type: string,
            required: true 
          }          

        }        


