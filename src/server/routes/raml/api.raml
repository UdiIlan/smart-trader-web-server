#%RAML 1.0
---
title: Smart Trade
version: v0.6
protocols: [HTTP]
mediaType: application/json
baseUri: http://smart-trader/{version}/
securedBy: [ passthrough ]
securitySchemes:
  passthrough: !include securitySchemas/passthrough.raml
types: 
  ReportFilter: !include types/report_filter.raml
  Order: !include types/order.raml
  RecentOrder: !include types/recent_order.raml
  ExchangeCredentials: !include types/exchange_credentials.raml
  OrderStatus: !include types/orders_status.raml
  SentOrder: !include types/sent_order.raml
  AccountStatus: !include types/account_status.raml
  AccountBalance: !include types/account_balance.raml
  User: !include types/user.raml
  WalletDeposit: !include types/wallet_deposit.raml

# /users:
#   get:
#     description: gets the list of all of the users
#     responses:
#         200:
#           body:
#             type: array
#             items:
#               type: object
#               properties:
#                 name: string
#                 description?: string
            
#   post:
#     description: Create a new user
#     body:
#       application/json:
#         type: User
#     responses:
#       200:
#         body:
#           type: object
#           properties:
#             name: string
#             description?: string
#           example:
#             {
#               "name": "Bob",
#               "description": "Bob Rohan - Finances"
#             }
#   put:
#     description: Update an exisitng user details
#     body:
#       application/json:
#         type: User
#     responses:
#       200:
#         body:
#           type: object
#           properties:
#             name: string
#             description?: string
#           example:
#             {
#               "name": "Bob",
#               "description": "Bob Rohan - Finances"
#             }

/accounts: 
  post:
    description: Create a new account
    body:
      application/json:
        type: object
        properties: 
          name: string
          description?: string
          exchangeCredentials: ExchangeCredentials[]
    responses:
      200:
        body: 
          type: AccountStatus


  /{accountName}:
    put:
      description: Update existing account details
      body:
        application/json:
          type: object
          properties:
            description?: string
            exchangeCredentials?: ExchangeCredentials[]
      responses:
        200:
          body: 
            type: AccountStatus

      /balance:
        get:
          description: Gets the balance of the account from the exchanges
          queryParameters:
            detailed?:
              description: Sets whether the returned balance is aggregated or detailed per exchange (default value is False).
              type: boolean
          responses:
            200:
              body:
                type: object
                properties:
                  accountBalance:
                    type: AccountBalance
                examples:
                  - accountBalance:
                      {
                        "totalBalance":
                        {
                          "USD": 1600,
                          "BTC": 0.7
                        }
                      }
                  - accountBalance:
                      {
                        "totalBalance": 
                        {
                          "USD": 1600,
                          "BTC": 0.7
                        },
                        "exchangesBalance":
                        {
                          "Bitstamp":
                          {
                            "USD": 1400,
                            "BTC": 0.3
                          },
                          "Kraken":
                          {
                            "USD": 200,
                            "BTC": 0.4
                          }
                        }
                      }                

    /funds:    
      /depositRequests:
        post:
          description: Request for a new deposit of assets to Smart-Trader account.
          body:
            application/json:
              type: object
              properties: 
                assetType: string
                amount: number
          responses:
            200:
              body:
                type: object
                properties:
                  requestTime: datetime
                  assetType: string
                  amount: number
                  walletAddress : string
                example:
                  {
                    "requestTime": 2018-10-10 10:05:13.384,
                    "assetType": "BTC",
                    "amount": 1500,
                    "walletAddress": "bc1qdp9q0lae7vz9vn4drw4e48kqkk44sccp34008s"
                  }

        get:       
          description: List recent account deposit resquest history.
          queryParameters:
            limit?:
              description: Limits the number of deposit that will be returned.
              type: number
          responses:
            200:
              body:
                type: array
                items:
                  type: object
                  properties:
                    time: datetime
                    assetType: string
                    amount: number
                    walletAddress : string
                    account: string
                    userId: string
                example:
                  [
                      {
                        "time": 2018-10-10 10:05:13.384,
                        "assetType": "BTC",
                         "amount": 1500,
                        "walletAddress": "bc1qdp9q0lae7vz9vn4drw4e48kqkk44sccp34008s",
                        "account": "BTC.com",
                        "userId": "bob"
                      },
                      {
                        "time": 2018-07-11 23:42:21.958,
                        "assetType": "ETH",
                        "amount": 7850,
                        "walletAddress": "0x301DF4cC1049982D8c289d9134Cd302678946Dd8"
                        "account": "BTC.com",
                        "userId": "alice"
                      }
                  ]
        /deposits:
          get: 
              description: Returns recent deposits for the given account.
              queryParameters:
                limit?:
                  description: Limits the number of deposits that will be returned.
              type: number
              responses:
                200:
                  body:
                    type: WalletDeposit[]
                    example: 
                      [
                        {
                          "walletAddress": "bc1qdp9q0lae7vz9vn4drw4e48kqkk44sccp34008s",
                          "requestTime": 2018-10-10 10:05:13.384,
                          "assetType": "BTC",
                          "ammount": 4500,
                          "deposits": 
                          [
                            {
                              "time": 2018-10-10 10:35:13.384,
                              "amount": 1500,
                              "status": "Completed",
                              "confirmations": 6
                            },
                            {
                              "time": 2018-10-10 11:37:13.384,
                              "amount": 2300,
                              "status": "Confirmed",
                              "confirmations": 4
                            },
                            {
                              "time": 2018-10-11 07:52:13.384,
                              "amount": 700,
                              "status": "Unconfirmed",
                              "confirmations": 0
                            }
                          ]              
                        },
                        {
                          "walletAddress": "0x301DF4cC1049982D8c289d9134Cd302678946Dd8",
                          "requestTime": 2018-07-05 14:22:26.953,
                          "assetType": "ETH",
                          "ammount": 10600,
                          "deposits": 
                          [
                            {
                              "time": 2018-07-05 14:52:26.953,
                              "amount": 8500,
                              "status": "Completed",
                              "confirmations": 12
                            },
                            {
                              "time": 2018-07-056 17:28:35.428,
                              "amount": 1600,
                              "status": "Confirmed",
                              "confirmations": 8
                            },
                            {
                              "time": 2018-08-09 23:57:45.562,
                              "amount": 500,
                              "status": "Unconfirmed",
                              "confirmations": 0
                            }
                          ]              
                        }
                      ]

          /{walletAddress}:
            get:       
              description: Returns recent deposits for the given wallet address.
              queryParameters:
                limit?:
                  description: Limits the number of deposits that will be returned.
              responses:
                200:
                  body:
                    type: WalletDeposit
                    example:
                        {
                          "walletAddress": "bc1qdp9q0lae7vz9vn4drw4e48kqkk44sccp34008s",
                          "requestTime": 2018-10-10 10:05:13.384,
                          "assetType": "BTC",
                          "ammount": 4500,
                          "deposits": 
                          [
                            {
                              "time": 2018-10-10 10:35:13.384,
                              "amount": 1500,
                              "status": "Completed",
                              "confirmations": 6
                            },
                            {
                              "time": 2018-10-10 11:37:13.384,
                              "amount": 2300,
                              "status": "Confirmed",
                              "confirmations": 4
                            },
                            {
                              "time": 2018-10-11 07:52:13.384,
                              "amount": 700,
                              "status": "Unconfirmed",
                              "confirmations": 0
                            }
                          ]              
                        }

      /withdrawals:
        post:
          description: Request to withdrawal annount of asset from Smart-Trader account.
          body:
            application/json:
              type: object
              properties:
                assetType: string 
                amount: number
          responses:
            200:
              body:
                type: object
                properties:
                  transactionId : string
                  assetType: string 
                  amount: number
                  requestTime: datetime
                example:
                    {
                      "transactionId": "FDSGDFHT15DS",
                      "assetType": "USD", 
                      "amount": 2000000,
                      "requestTime": 2018-10-10 11:37:13.384
                    }
            400:
              body:
                type: object
                properties:
                  assetType: string 
                  amount: number
                  requestTime: datetime
                  errorMessage: string
                example:
                    {
                      "assetType": "USD", 
                      "amount": 2000000,
                      "requestTime": 2018-10-10 11:37:13.384,
                      "errorMessage": "Insufficient funds."
                    }
        get:       
          description: List recent withdrawals resquest history.
          queryParameters:
            limit?:
              description: Limits the number of withdrawals that will be returned.
              type: number
          responses:
            200:
              body:
                type: array
                items:
                  type: object
                  properties:
                    time: datetime
                    assetType: string
                    amount : number
                    account: string
                    userId: string
                example:
                  [
                      {
                        "time": 2018-10-10 10:05:13.384,
                        "assetType": "USD",
                        "amount": 1500000,
                        "account": "BTC.com",
                        "userId": "bob"
                      },
                      {
                        "time": 2018-07-11 23:42:21.958,
                        "assetType": "EUR",
                        "amount": 86646000,
                        "account": "BTC.com",
                        "userId": "alice"
                      }
                  ]

        /{transactionId}:
          get:       
            description: Returns a specific withdrawal transaction status.
            responses:
              200:
                body:
                  type: object
                  properties:
                    transactionId: string
                    requestTime: datetime
                    amount: number
                    assetType: string
                    status:
                      enum: [Success, Failed, In-Progress]
                  example:
                      {
                        "transactionId": "FDSGDFHT15DS",
                        "requestTime": 2018-10-10 10:05:13.384,
                        "amount": 1500,
                        "assetType": "USD",
                        "status": "In-Progress"
                      }
                    

    /trades:
      post:
        description: Send an order to be executed on Smart-Trader. When a floorPrice isn't sent the order is executed as a market order.
        body:
          application/json:
            type: Order
            example: 
              { 
                "actionType": "sell",
                "size": 1001,
                "assetPair": "BTC-USD",
                "price": 6500,
                "durationMin": 600
              }
        responses:
          200:
            body:
              type: object
              properties: 
                tradeOrderId: string
              example:
                {
                  "tradeOrderId": "ABC2D"
                }

          400:
            body:
              type: object
              properties:
                assetType: string 
                amount: number
                requestTime: datetime
                errorMessage: string
              example:
                  {
                    "actionType": "sell",
                    "size": 1001,
                    "assetPair": "BTC-USD",
                    "errorMessage": "Insufficient funds."
                  }
      get:       
        description: List recent orders history.
        queryParameters:
          limit?:
            description: Limits the number of withdrawals that will be returned.
            type: number
        responses:
          200:
            body:
              type: array
              items:
                type: RecentOrder
              example:
                [
                    {
                      "actionType": "sell",
                      "size": 1001,
                      "assetPair": "BTC-USD",
                      "price": 6500,
                      "durationMin": 600,
                      "account": "BTC.com",
                      "userId": "bob"
                    },
                    {
                      "actionType": "buy",
                      "size": 15000,
                      "assetPair": "BCH-EUR",
                      "price": 300,
                      "durationMin": 400,
                      "account": "BTC.com",
                      "userId": "alice"
                    }
                ]
      /{tradeOrderId}:
        get:
          responses:
            200:
              body:
                application/json:
                  type: OrderStatus
                  example:
                    {
                      "startTime": 2018-10-10 10:05:13.384,
                      "elapsedTimeMinutes": 15.42,
                      "assetPair": "BTC-USD",
                      "status": "Done",
                      "requestedSize": 1500,
                      "executionSize": 1001,
                      "executedTargerAmmount": 850000,
                      "tradeOrderId": "ABC2D"
                    }

    /reports:
      description: Smart-Trader reports APIs
      /sentOrders:
        post:
          description: Generat report on sent transactions data.
          body:
            application/json:
              properties:
                limit: 
                  description: Limit the resposnse size (default is 1000).
                  type: number
                  required: true
                filter:
                  description: Report object.
                  required: true
                  type: ReportFilter
          responses:
            200:
              body:
                application/json:
                  type: SentOrder[]
                  example:
                    [
                      { 
                        "account": "BTC.com"
                        "exchange": "Bitfinex",
                        "actionType": "buy",
                        "size": 0.1,
                        "price": 8722.8,
                        "exchangeOrderId": "17869737638",
                        "status": "Finished",
                        "orderTime": 2018-10-10 10:05:13.384,
                        "assetPair": "BTC-USD",
                        "currencyFromAvailable": 3522.28410189,
                        "currencyToAvailable": 0.10772093,
                        "ask": 6501,
                        "bid": 6499,
                        "userId": "ABC",
                        "tradeOrderId": "850"
                      },
                       { 
                        "account": "BTC.com"
                        "exchange": "Bitstamp",
                        "actionType": "buy",
                        "size": 0.1,
                        "price": 8556.8,
                        "exchangeOrderId": "4165469586",
                        "status": "Finished",
                        "orderTime": 2018-10-15 10:05:13.384,
                        "assetPair": "BTC-USD",
                        "currencyFromAvailable": 3522.28410189,
                        "currencyToAvailable": 0.10772093,
                        "ask": 6501,
                        "bid": 6499,
                        "userId": "ABC",
                        "tradeOrderId": "850"
                      },
                       { 
                        "account": "BTC.com"
                        "exchange": "Kraken",
                        "actionType": "buy",
                        "size": 0.1,
                        "price": 6581.8,
                        "exchangeOrderId": "FSDFS6556D",
                        "status": "Finished",
                        "orderTime": 2018-11-10 10:05:13.384,
                        "assetPair": "BTC-USD",
                        "currencyFromAvailable": 3522.28410189,
                        "currencyToAvailable": 0.10772093,
                        "ask": 6501,
                        "bid": 6499,
                        "userId": "ABC",
                        "tradeOrderId": "850"
                      }
                    ]    
        


