#%RAML 1.0
title: Smart Trade
version: v0.5
protocols: [HTTP]
mediaType: application/json
baseUri: http://smart-trader/{version}/
securedBy: [passthrough]
securitySchemes:
  passthrough: !include passthrough_security_scheme.raml


types: 
  ReportFilter: !include report_filter.raml
  Order: !include order.raml
  OrderbookOrder: !include orderbook_order.raml
  OrderStatus: !include order_status.raml
  ExchangeCredentials: !include exchange_credentials.raml
  Orderbook: !include orderbook.raml
  Price: !include price.raml
  LoginStatus: !include login_status.raml
  SentOrder: !include sent_order.raml

/accounts: 
  post:
    is []
    description: Create a new account
    body:
      application/json:
        type: object
        properties: 
          name: string
          description?: string
          exchangeCredentials: ExchangeCredentials[]
          publicKey: 
            type: string
            description: Public key for the account's admin user
    responses:
      200:
        body:
          accountStatus
  /{accountName}:
    /users:
      post:
        description: Create a new user for an account
        body:
          application/json:
            type: object
            properties: 
              name: string
              description?: string
              roles:
                type: array
                items:
                  enum: [Admin, Trade, View]
              publicKey: string
          responses:
            200:
              body:
                name: string
                description?: string

    /balance:
      get:
        description: Gets the balance of the account from the exchanges
        queryParameters:
          detailed?:
            description: Sets whether the returned balance is aggregated or detailed per exchange
            type: boolean



  

      # 200: # HTTP status code
      #   body: # declare content of response
      #     application/json: # media type
      #       type: | # structural definition of a response (schema or type)
      #         {
      #           "title": "Hello world Response",
      #           "type": "object",
      #           "properties": {
      #             "message": {
      #               "type": "string"
      #             }
      #           }
      #         }
      #       example: | # example of how a response looks
      #         {
      #           "message": "Hello world"
      #         }

    


